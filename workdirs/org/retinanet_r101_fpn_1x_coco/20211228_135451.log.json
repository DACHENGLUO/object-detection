{"env_info": "sys.platform: win32\nPython: 3.8.12 (default, Oct 12 2021, 03:01:40) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3070\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.1\nNVCC: Not Available\nGCC: n/a\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191125 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 2019\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_XNNPACK, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.4\nMMCV: 1.4.2\nMMCV Compiler: MSVC 192930037\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.19.1+df212e7", "config": "model = dict(\n    type='RetinaNet',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    bbox_head=dict(\n        type='RetinaHead',\n        num_classes=80,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            octave_base_scale=4,\n            scales_per_octave=3,\n            ratios=[0.5, 1.0, 2.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    train_cfg=dict(\n        assigner=dict(\n            type='MaxIoUAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.4,\n            min_pos_iou=0,\n            ignore_iof_thr=-1),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.5),\n        max_per_img=100))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_train2017_small.json',\n        img_prefix='data/coco/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox')\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineRestart',\n    periods=[20, 20, 20, 20, 20],\n    restart_weights=[1, 1, 1, 1, 1],\n    min_lr_ratio=1e-05)\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\ncheckpoint_config = dict(interval=20)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs\\retinanet_r101_fpn_1x_coco'\ngpu_ids = range(0, 1)\n", "seed": 1623197630, "exp_name": "retinanet_r101_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.01, "memory": 5238, "data_time": 0.20623, "loss_cls": 1.2159, "loss_bbox": 0.70062, "loss": 1.91652, "time": 0.6286}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.01, "memory": 5238, "data_time": 0.00615, "loss_cls": 1.21839, "loss_bbox": 0.68704, "loss": 1.90542, "time": 0.37173}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.01, "memory": 5238, "data_time": 0.00682, "loss_cls": 1.22624, "loss_bbox": 0.68554, "loss": 1.91178, "time": 0.38878}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.01, "memory": 5238, "data_time": 0.00668, "loss_cls": 1.18574, "loss_bbox": 0.69134, "loss": 1.87709, "time": 0.37562}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.01, "memory": 5238, "data_time": 0.00615, "loss_cls": 1.21726, "loss_bbox": 0.66105, "loss": 1.87832, "time": 0.36611}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01, "memory": 5238, "data_time": 0.00655, "loss_cls": 1.20169, "loss_bbox": 0.66755, "loss": 1.86924, "time": 0.37552}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01, "memory": 5238, "data_time": 0.00631, "loss_cls": 1.20699, "loss_bbox": 0.69535, "loss": 1.90234, "time": 0.38419}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01, "memory": 5238, "data_time": 0.00653, "loss_cls": 1.20846, "loss_bbox": 0.68303, "loss": 1.89149, "time": 0.41667}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01, "memory": 5238, "data_time": 0.00673, "loss_cls": 1.18259, "loss_bbox": 0.66751, "loss": 1.85011, "time": 0.38582}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01, "memory": 5238, "data_time": 0.00674, "loss_cls": 1.193, "loss_bbox": 0.68245, "loss": 1.87544, "time": 0.38034}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.01, "memory": 5238, "data_time": 0.00752, "loss_cls": 1.2102, "loss_bbox": 0.67496, "loss": 1.88516, "time": 0.37473}
{"mode": "val", "epoch": 1, "iter": 5000, "lr": 0.01}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00994, "memory": 5238, "data_time": 0.20783, "loss_cls": 1.21342, "loss_bbox": 0.69753, "loss": 1.91095, "time": 0.57659}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00994, "memory": 5238, "data_time": 0.00673, "loss_cls": 1.1948, "loss_bbox": 0.67316, "loss": 1.86796, "time": 0.37697}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00994, "memory": 5238, "data_time": 0.00657, "loss_cls": 1.16543, "loss_bbox": 0.69848, "loss": 1.8639, "time": 0.36951}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00994, "memory": 5238, "data_time": 0.00654, "loss_cls": 1.1755, "loss_bbox": 0.68285, "loss": 1.85835, "time": 0.37363}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00994, "memory": 5238, "data_time": 0.007, "loss_cls": 1.17252, "loss_bbox": 0.65771, "loss": 1.83023, "time": 0.37568}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00994, "memory": 5238, "data_time": 0.00662, "loss_cls": 1.1366, "loss_bbox": 0.68489, "loss": 1.82149, "time": 0.37624}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00994, "memory": 5238, "data_time": 0.00703, "loss_cls": 1.12029, "loss_bbox": 0.67265, "loss": 1.79294, "time": 0.37407}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.00994, "memory": 5238, "data_time": 0.00666, "loss_cls": 1.13645, "loss_bbox": 0.65795, "loss": 1.79441, "time": 0.38123}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.00994, "memory": 5238, "data_time": 0.00626, "loss_cls": 1.11975, "loss_bbox": 0.69284, "loss": 1.81259, "time": 0.3719}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00994, "memory": 5238, "data_time": 0.00655, "loss_cls": 1.07702, "loss_bbox": 0.66039, "loss": 1.73741, "time": 0.37256}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.00994, "memory": 5238, "data_time": 0.0061, "loss_cls": 1.08955, "loss_bbox": 0.67353, "loss": 1.76308, "time": 0.37139}
{"mode": "val", "epoch": 2, "iter": 5000, "lr": 0.00994}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00976, "memory": 5238, "data_time": 0.20738, "loss_cls": 1.11583, "loss_bbox": 0.65884, "loss": 1.77467, "time": 0.57415}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00976, "memory": 5238, "data_time": 0.00668, "loss_cls": 1.05441, "loss_bbox": 0.66389, "loss": 1.71831, "time": 0.37862}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.00976, "memory": 5238, "data_time": 0.00674, "loss_cls": 1.0488, "loss_bbox": 0.65959, "loss": 1.7084, "time": 0.38289}
