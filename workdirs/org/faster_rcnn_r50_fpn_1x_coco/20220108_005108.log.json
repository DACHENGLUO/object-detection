{"env_info": "sys.platform: win32\nPython: 3.9.7 | packaged by conda-forge | (default, Sep  2 2021, 17:55:20) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 2070 SUPER\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.2\nNVCC: Not Available\nGCC: n/a\nPyTorch: 1.9.1\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192829337\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 2019\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, \n\nTorchVision: 0.10.1\nOpenCV: 4.5.5\nMMCV: 1.4.2\nMMCV Compiler: MSVC 192628806\nMMCV CUDA Compiler: 11.2\nMMDetection: 2.20.0+", "config": "model = dict(\n    type='FasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=1,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_train2017_small_old_no.json',\n        img_prefix='data/coco/small_train2017_original/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco/annotations/instances_val2017.json',\n        img_prefix='data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=6, metric='bbox')\noptimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=4)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs\\faster_rcnn_r50_fpn_1x_coco'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 780444196, "exp_name": "faster_rcnn_r50_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00198, "memory": 3788, "data_time": 0.15364, "loss_rpn_cls": 0.55304, "loss_rpn_bbox": 0.12562, "loss_cls": 1.06271, "acc": 87.06641, "loss_bbox": 0.0655, "loss": 1.80687, "time": 0.57684}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00398, "memory": 3788, "data_time": 0.00718, "loss_rpn_cls": 0.23967, "loss_rpn_bbox": 0.10006, "loss_cls": 0.48535, "acc": 94.26562, "loss_bbox": 0.19128, "loss": 1.01636, "time": 0.38095}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00597, "memory": 3788, "data_time": 0.00707, "loss_rpn_cls": 0.19328, "loss_rpn_bbox": 0.09985, "loss_cls": 0.41494, "acc": 94.26367, "loss_bbox": 0.18652, "loss": 0.89459, "time": 0.38004}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00797, "memory": 3788, "data_time": 0.00716, "loss_rpn_cls": 0.21375, "loss_rpn_bbox": 0.11395, "loss_cls": 0.42868, "acc": 93.81836, "loss_bbox": 0.20314, "loss": 0.95953, "time": 0.38201}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00997, "memory": 3788, "data_time": 0.00738, "loss_rpn_cls": 0.17979, "loss_rpn_bbox": 0.09137, "loss_cls": 0.4517, "acc": 94.10352, "loss_bbox": 0.20396, "loss": 0.92682, "time": 0.38169}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.01197, "memory": 3788, "data_time": 0.00611, "loss_rpn_cls": 0.17568, "loss_rpn_bbox": 0.09515, "loss_cls": 0.50746, "acc": 93.02539, "loss_bbox": 0.24857, "loss": 1.02686, "time": 0.37625}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.01397, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.26045, "loss_rpn_bbox": 0.12152, "loss_cls": 0.41512, "acc": 94.98242, "loss_bbox": 0.17396, "loss": 0.97106, "time": 0.3822}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.01596, "memory": 3788, "data_time": 0.00769, "loss_rpn_cls": 0.22872, "loss_rpn_bbox": 0.11736, "loss_cls": 0.52127, "acc": 94.0625, "loss_bbox": 0.20826, "loss": 1.0756, "time": 0.38839}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.01796, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.24047, "loss_rpn_bbox": 0.11309, "loss_cls": 0.50214, "acc": 93.4375, "loss_bbox": 0.22323, "loss": 1.07893, "time": 0.38228}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.01996, "memory": 3788, "data_time": 0.00697, "loss_rpn_cls": 0.2427, "loss_rpn_bbox": 0.10393, "loss_cls": 0.46055, "acc": 94.14844, "loss_bbox": 0.19808, "loss": 1.00527, "time": 0.38369}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00697, "loss_rpn_cls": 0.24385, "loss_rpn_bbox": 0.12898, "loss_cls": 0.4923, "acc": 94.26758, "loss_bbox": 0.19431, "loss": 1.05944, "time": 0.38007}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15443, "loss_rpn_cls": 0.2101, "loss_rpn_bbox": 0.10426, "loss_cls": 0.4479, "acc": 93.83203, "loss_bbox": 0.21883, "loss": 0.98109, "time": 0.54266}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00697, "loss_rpn_cls": 0.17478, "loss_rpn_bbox": 0.1063, "loss_cls": 0.45868, "acc": 93.51953, "loss_bbox": 0.22366, "loss": 0.96342, "time": 0.37504}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.18139, "loss_rpn_bbox": 0.09725, "loss_cls": 0.46844, "acc": 92.95117, "loss_bbox": 0.24554, "loss": 0.99262, "time": 0.3767}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.18544, "loss_rpn_bbox": 0.10394, "loss_cls": 0.4596, "acc": 93.5918, "loss_bbox": 0.2136, "loss": 0.96258, "time": 0.38287}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00732, "loss_rpn_cls": 0.16091, "loss_rpn_bbox": 0.09856, "loss_cls": 0.49428, "acc": 93.0, "loss_bbox": 0.23924, "loss": 0.99299, "time": 0.38335}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00695, "loss_rpn_cls": 0.15188, "loss_rpn_bbox": 0.09129, "loss_cls": 0.47606, "acc": 92.95703, "loss_bbox": 0.24248, "loss": 0.96172, "time": 0.37676}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00697, "loss_rpn_cls": 0.16843, "loss_rpn_bbox": 0.09994, "loss_cls": 0.46338, "acc": 92.84375, "loss_bbox": 0.24424, "loss": 0.97598, "time": 0.38849}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00697, "loss_rpn_cls": 0.14601, "loss_rpn_bbox": 0.08978, "loss_cls": 0.47241, "acc": 92.35352, "loss_bbox": 0.26054, "loss": 0.96874, "time": 0.37799}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00654, "loss_rpn_cls": 0.15391, "loss_rpn_bbox": 0.08973, "loss_cls": 0.54424, "acc": 92.05078, "loss_bbox": 0.27765, "loss": 1.06553, "time": 0.37758}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00693, "loss_rpn_cls": 0.16595, "loss_rpn_bbox": 0.10927, "loss_cls": 0.46714, "acc": 93.0332, "loss_bbox": 0.23023, "loss": 0.9726, "time": 0.3846}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00711, "loss_rpn_cls": 0.10673, "loss_rpn_bbox": 0.09441, "loss_cls": 0.51502, "acc": 92.01367, "loss_bbox": 0.28304, "loss": 0.99919, "time": 0.38798}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15454, "loss_rpn_cls": 0.14177, "loss_rpn_bbox": 0.09844, "loss_cls": 0.55874, "acc": 91.49219, "loss_bbox": 0.30076, "loss": 1.0997, "time": 0.53838}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.14642, "loss_rpn_bbox": 0.10983, "loss_cls": 0.53138, "acc": 91.35742, "loss_bbox": 0.29912, "loss": 1.08675, "time": 0.38456}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00693, "loss_rpn_cls": 0.13901, "loss_rpn_bbox": 0.09467, "loss_cls": 0.49827, "acc": 91.27148, "loss_bbox": 0.29454, "loss": 1.02649, "time": 0.38164}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00652, "loss_rpn_cls": 0.10082, "loss_rpn_bbox": 0.08188, "loss_cls": 0.47836, "acc": 92.14844, "loss_bbox": 0.27587, "loss": 0.93693, "time": 0.38138}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00716, "loss_rpn_cls": 0.10875, "loss_rpn_bbox": 0.0788, "loss_cls": 0.53422, "acc": 91.19922, "loss_bbox": 0.30502, "loss": 1.02679, "time": 0.37892}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.13058, "loss_rpn_bbox": 0.08349, "loss_cls": 0.50374, "acc": 91.61523, "loss_bbox": 0.27996, "loss": 0.99778, "time": 0.38125}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00675, "loss_rpn_cls": 0.11859, "loss_rpn_bbox": 0.10334, "loss_cls": 0.55166, "acc": 90.87695, "loss_bbox": 0.30899, "loss": 1.08258, "time": 0.38529}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00711, "loss_rpn_cls": 0.10777, "loss_rpn_bbox": 0.08321, "loss_cls": 0.50844, "acc": 91.42188, "loss_bbox": 0.30344, "loss": 1.00285, "time": 0.38517}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.15721, "loss_rpn_bbox": 0.11096, "loss_cls": 0.52132, "acc": 91.76562, "loss_bbox": 0.28449, "loss": 1.07397, "time": 0.38328}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00673, "loss_rpn_cls": 0.10478, "loss_rpn_bbox": 0.08424, "loss_cls": 0.49397, "acc": 92.06641, "loss_bbox": 0.27628, "loss": 0.95927, "time": 0.37775}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00699, "loss_rpn_cls": 0.11463, "loss_rpn_bbox": 0.10154, "loss_cls": 0.51675, "acc": 90.90625, "loss_bbox": 0.30277, "loss": 1.03569, "time": 0.38308}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15528, "loss_rpn_cls": 0.10266, "loss_rpn_bbox": 0.09418, "loss_cls": 0.564, "acc": 89.97461, "loss_bbox": 0.34703, "loss": 1.10787, "time": 0.54115}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.13016, "loss_rpn_bbox": 0.103, "loss_cls": 0.51473, "acc": 91.12305, "loss_bbox": 0.29597, "loss": 1.04386, "time": 0.38246}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00714, "loss_rpn_cls": 0.10747, "loss_rpn_bbox": 0.08974, "loss_cls": 0.49495, "acc": 91.36133, "loss_bbox": 0.30095, "loss": 0.9931, "time": 0.38169}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00764, "loss_rpn_cls": 0.10817, "loss_rpn_bbox": 0.08951, "loss_cls": 0.44522, "acc": 92.27344, "loss_bbox": 0.26772, "loss": 0.91061, "time": 0.38508}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00699, "loss_rpn_cls": 0.11394, "loss_rpn_bbox": 0.09868, "loss_cls": 0.56487, "acc": 90.20703, "loss_bbox": 0.33029, "loss": 1.10777, "time": 0.38203}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00699, "loss_rpn_cls": 0.10352, "loss_rpn_bbox": 0.08287, "loss_cls": 0.51092, "acc": 90.48242, "loss_bbox": 0.33437, "loss": 1.03168, "time": 0.38517}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00718, "loss_rpn_cls": 0.10193, "loss_rpn_bbox": 0.07977, "loss_cls": 0.48585, "acc": 91.22656, "loss_bbox": 0.29768, "loss": 0.96522, "time": 0.38636}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.0066, "loss_rpn_cls": 0.12458, "loss_rpn_bbox": 0.08942, "loss_cls": 0.50616, "acc": 90.94336, "loss_bbox": 0.30398, "loss": 1.02414, "time": 0.38195}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.14298, "loss_rpn_bbox": 0.09482, "loss_cls": 0.50997, "acc": 91.13477, "loss_bbox": 0.29851, "loss": 1.04628, "time": 0.38234}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.1157, "loss_rpn_bbox": 0.08442, "loss_cls": 0.48684, "acc": 91.79102, "loss_bbox": 0.28313, "loss": 0.9701, "time": 0.38439}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00709, "loss_rpn_cls": 0.12323, "loss_rpn_bbox": 0.08197, "loss_cls": 0.51429, "acc": 90.62891, "loss_bbox": 0.31689, "loss": 1.03637, "time": 0.38523}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15496, "loss_rpn_cls": 0.08233, "loss_rpn_bbox": 0.0895, "loss_cls": 0.57571, "acc": 89.88867, "loss_bbox": 0.34242, "loss": 1.08996, "time": 0.54038}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.0065, "loss_rpn_cls": 0.09513, "loss_rpn_bbox": 0.09248, "loss_cls": 0.47876, "acc": 90.82031, "loss_bbox": 0.31215, "loss": 0.97853, "time": 0.3807}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00679, "loss_rpn_cls": 0.12349, "loss_rpn_bbox": 0.09639, "loss_cls": 0.49304, "acc": 90.80469, "loss_bbox": 0.30218, "loss": 1.0151, "time": 0.38802}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.12141, "loss_rpn_bbox": 0.09993, "loss_cls": 0.50272, "acc": 90.88867, "loss_bbox": 0.30435, "loss": 1.02842, "time": 0.38214}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00707, "loss_rpn_cls": 0.10932, "loss_rpn_bbox": 0.08163, "loss_cls": 0.50597, "acc": 90.66797, "loss_bbox": 0.31694, "loss": 1.01387, "time": 0.38431}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.08074, "loss_rpn_bbox": 0.08429, "loss_cls": 0.46923, "acc": 90.98047, "loss_bbox": 0.31873, "loss": 0.95298, "time": 0.37845}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00648, "loss_rpn_cls": 0.09724, "loss_rpn_bbox": 0.08422, "loss_cls": 0.51708, "acc": 90.73633, "loss_bbox": 0.30852, "loss": 1.00706, "time": 0.38611}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00687, "loss_rpn_cls": 0.11989, "loss_rpn_bbox": 0.08804, "loss_cls": 0.51675, "acc": 90.49805, "loss_bbox": 0.31285, "loss": 1.03752, "time": 0.38257}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.08441, "loss_rpn_bbox": 0.08274, "loss_cls": 0.48032, "acc": 91.45508, "loss_bbox": 0.29095, "loss": 0.93843, "time": 0.3856}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.10686, "loss_rpn_bbox": 0.08212, "loss_cls": 0.4472, "acc": 91.42969, "loss_bbox": 0.28234, "loss": 0.91852, "time": 0.38476}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00634, "loss_rpn_cls": 0.10255, "loss_rpn_bbox": 0.08517, "loss_cls": 0.52201, "acc": 90.36914, "loss_bbox": 0.31953, "loss": 1.02926, "time": 0.38271}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15471, "loss_rpn_cls": 0.08516, "loss_rpn_bbox": 0.07635, "loss_cls": 0.46886, "acc": 91.21289, "loss_bbox": 0.28728, "loss": 0.91765, "time": 0.53255}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00683, "loss_rpn_cls": 0.08198, "loss_rpn_bbox": 0.09486, "loss_cls": 0.52506, "acc": 89.5918, "loss_bbox": 0.34869, "loss": 1.05059, "time": 0.38423}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00672, "loss_rpn_cls": 0.10166, "loss_rpn_bbox": 0.08308, "loss_cls": 0.47877, "acc": 90.9707, "loss_bbox": 0.30765, "loss": 0.97117, "time": 0.37904}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00693, "loss_rpn_cls": 0.10542, "loss_rpn_bbox": 0.09392, "loss_cls": 0.51858, "acc": 90.64648, "loss_bbox": 0.30738, "loss": 1.0253, "time": 0.38677}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00675, "loss_rpn_cls": 0.10258, "loss_rpn_bbox": 0.08529, "loss_cls": 0.47097, "acc": 90.66797, "loss_bbox": 0.31085, "loss": 0.96969, "time": 0.38484}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00687, "loss_rpn_cls": 0.09355, "loss_rpn_bbox": 0.07132, "loss_cls": 0.47528, "acc": 90.74219, "loss_bbox": 0.30129, "loss": 0.94144, "time": 0.37767}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00722, "loss_rpn_cls": 0.12128, "loss_rpn_bbox": 0.11566, "loss_cls": 0.48593, "acc": 90.54297, "loss_bbox": 0.3008, "loss": 1.02367, "time": 0.38474}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.08372, "loss_rpn_bbox": 0.08208, "loss_cls": 0.49015, "acc": 90.76172, "loss_bbox": 0.30921, "loss": 0.96516, "time": 0.38773}
{"mode": "train", "epoch": 6, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00685, "loss_rpn_cls": 0.0873, "loss_rpn_bbox": 0.0951, "loss_cls": 0.51685, "acc": 89.76953, "loss_bbox": 0.34647, "loss": 1.04572, "time": 0.38659}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00673, "loss_rpn_cls": 0.09873, "loss_rpn_bbox": 0.0742, "loss_cls": 0.47317, "acc": 91.21484, "loss_bbox": 0.29109, "loss": 0.93719, "time": 0.3805}
{"mode": "train", "epoch": 6, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00666, "loss_rpn_cls": 0.10404, "loss_rpn_bbox": 0.08722, "loss_cls": 0.50752, "acc": 90.06836, "loss_bbox": 0.32398, "loss": 1.02276, "time": 0.38316}
{"mode": "val", "epoch": 6, "iter": 5000, "lr": 0.02, "bbox_mAP": 0.009, "bbox_mAP_50": 0.021, "bbox_mAP_75": 0.006, "bbox_mAP_s": 0.007, "bbox_mAP_m": 0.01, "bbox_mAP_l": 0.008, "bbox_mAP_copypaste": "0.009 0.021 0.006 0.007 0.010 0.008"}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15447, "loss_rpn_cls": 0.08977, "loss_rpn_bbox": 0.0808, "loss_cls": 0.44106, "acc": 91.01758, "loss_bbox": 0.29524, "loss": 0.90686, "time": 0.53049}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.07611, "loss_rpn_bbox": 0.08556, "loss_cls": 0.46724, "acc": 90.28516, "loss_bbox": 0.32923, "loss": 0.95815, "time": 0.37881}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00699, "loss_rpn_cls": 0.08209, "loss_rpn_bbox": 0.07785, "loss_cls": 0.47699, "acc": 90.44141, "loss_bbox": 0.31148, "loss": 0.94841, "time": 0.38226}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.0814, "loss_rpn_bbox": 0.088, "loss_cls": 0.4648, "acc": 90.83203, "loss_bbox": 0.30096, "loss": 0.93515, "time": 0.38536}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00711, "loss_rpn_cls": 0.08087, "loss_rpn_bbox": 0.0829, "loss_cls": 0.46667, "acc": 90.39648, "loss_bbox": 0.32436, "loss": 0.95479, "time": 0.38493}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00668, "loss_rpn_cls": 0.07953, "loss_rpn_bbox": 0.08221, "loss_cls": 0.48317, "acc": 90.19727, "loss_bbox": 0.32219, "loss": 0.96711, "time": 0.37961}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00711, "loss_rpn_cls": 0.08494, "loss_rpn_bbox": 0.09603, "loss_cls": 0.50786, "acc": 89.98047, "loss_bbox": 0.32092, "loss": 1.00975, "time": 0.38255}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00677, "loss_rpn_cls": 0.09235, "loss_rpn_bbox": 0.10083, "loss_cls": 0.48848, "acc": 89.98242, "loss_bbox": 0.32537, "loss": 1.00704, "time": 0.38394}
{"mode": "train", "epoch": 7, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00685, "loss_rpn_cls": 0.0923, "loss_rpn_bbox": 0.07549, "loss_cls": 0.4935, "acc": 90.34375, "loss_bbox": 0.32151, "loss": 0.98279, "time": 0.38419}
{"mode": "train", "epoch": 7, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00683, "loss_rpn_cls": 0.09375, "loss_rpn_bbox": 0.07606, "loss_cls": 0.44061, "acc": 91.12305, "loss_bbox": 0.30098, "loss": 0.9114, "time": 0.37906}
{"mode": "train", "epoch": 7, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.09732, "loss_rpn_bbox": 0.08744, "loss_cls": 0.49719, "acc": 90.1543, "loss_bbox": 0.32445, "loss": 1.0064, "time": 0.38328}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.02, "memory": 3788, "data_time": 0.15399, "loss_rpn_cls": 0.06738, "loss_rpn_bbox": 0.08164, "loss_cls": 0.4989, "acc": 89.61328, "loss_bbox": 0.3376, "loss": 0.98552, "time": 0.53981}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.02, "memory": 3788, "data_time": 0.00746, "loss_rpn_cls": 0.08551, "loss_rpn_bbox": 0.09402, "loss_cls": 0.51092, "acc": 89.08008, "loss_bbox": 0.36164, "loss": 1.05208, "time": 0.37943}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.02, "memory": 3788, "data_time": 0.00718, "loss_rpn_cls": 0.08147, "loss_rpn_bbox": 0.08506, "loss_cls": 0.47917, "acc": 90.48242, "loss_bbox": 0.30292, "loss": 0.94862, "time": 0.38203}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.02, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.06501, "loss_rpn_bbox": 0.08, "loss_cls": 0.42022, "acc": 90.78125, "loss_bbox": 0.30501, "loss": 0.87024, "time": 0.38345}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.02, "memory": 3788, "data_time": 0.00755, "loss_rpn_cls": 0.0832, "loss_rpn_bbox": 0.09012, "loss_cls": 0.45217, "acc": 90.34375, "loss_bbox": 0.30399, "loss": 0.92948, "time": 0.38343}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.02, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.08493, "loss_rpn_bbox": 0.09119, "loss_cls": 0.47345, "acc": 90.24805, "loss_bbox": 0.32056, "loss": 0.97012, "time": 0.38388}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 0.02, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.07206, "loss_rpn_bbox": 0.07529, "loss_cls": 0.45028, "acc": 91.02148, "loss_bbox": 0.30273, "loss": 0.90037, "time": 0.38497}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.02, "memory": 3788, "data_time": 0.00658, "loss_rpn_cls": 0.08731, "loss_rpn_bbox": 0.0705, "loss_cls": 0.44247, "acc": 90.8125, "loss_bbox": 0.29925, "loss": 0.89953, "time": 0.38246}
{"mode": "train", "epoch": 8, "iter": 450, "lr": 0.02, "memory": 3788, "data_time": 0.00695, "loss_rpn_cls": 0.07764, "loss_rpn_bbox": 0.08653, "loss_cls": 0.46582, "acc": 90.48047, "loss_bbox": 0.31084, "loss": 0.94083, "time": 0.38066}
{"mode": "train", "epoch": 8, "iter": 500, "lr": 0.02, "memory": 3788, "data_time": 0.00652, "loss_rpn_cls": 0.08104, "loss_rpn_bbox": 0.07333, "loss_cls": 0.46256, "acc": 90.64648, "loss_bbox": 0.30163, "loss": 0.91857, "time": 0.38261}
{"mode": "train", "epoch": 8, "iter": 550, "lr": 0.02, "memory": 3788, "data_time": 0.00687, "loss_rpn_cls": 0.08718, "loss_rpn_bbox": 0.08642, "loss_cls": 0.48764, "acc": 89.28516, "loss_bbox": 0.33197, "loss": 0.9932, "time": 0.38736}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.002, "memory": 3788, "data_time": 0.15447, "loss_rpn_cls": 0.0557, "loss_rpn_bbox": 0.06553, "loss_cls": 0.43731, "acc": 90.57617, "loss_bbox": 0.30798, "loss": 0.86652, "time": 0.52865}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.002, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.06507, "loss_rpn_bbox": 0.09184, "loss_cls": 0.4758, "acc": 88.95117, "loss_bbox": 0.35652, "loss": 0.98923, "time": 0.38365}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.002, "memory": 3788, "data_time": 0.00687, "loss_rpn_cls": 0.05812, "loss_rpn_bbox": 0.07154, "loss_cls": 0.44532, "acc": 89.57812, "loss_bbox": 0.3431, "loss": 0.91808, "time": 0.38197}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.002, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.06333, "loss_rpn_bbox": 0.08833, "loss_cls": 0.47879, "acc": 89.13281, "loss_bbox": 0.35577, "loss": 0.98622, "time": 0.38589}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.002, "memory": 3788, "data_time": 0.00683, "loss_rpn_cls": 0.04708, "loss_rpn_bbox": 0.06387, "loss_cls": 0.43246, "acc": 90.27148, "loss_bbox": 0.31972, "loss": 0.86313, "time": 0.37797}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.002, "memory": 3788, "data_time": 0.0066, "loss_rpn_cls": 0.05869, "loss_rpn_bbox": 0.06868, "loss_cls": 0.43632, "acc": 89.42383, "loss_bbox": 0.34564, "loss": 0.90934, "time": 0.38993}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.002, "memory": 3788, "data_time": 0.00703, "loss_rpn_cls": 0.05028, "loss_rpn_bbox": 0.0633, "loss_cls": 0.38996, "acc": 91.11914, "loss_bbox": 0.29044, "loss": 0.79397, "time": 0.38423}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.002, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.05582, "loss_rpn_bbox": 0.06978, "loss_cls": 0.41794, "acc": 90.09766, "loss_bbox": 0.3223, "loss": 0.86584, "time": 0.38601}
{"mode": "train", "epoch": 9, "iter": 450, "lr": 0.002, "memory": 3788, "data_time": 0.00712, "loss_rpn_cls": 0.04591, "loss_rpn_bbox": 0.05653, "loss_cls": 0.45248, "acc": 89.71484, "loss_bbox": 0.33383, "loss": 0.88875, "time": 0.38474}
{"mode": "train", "epoch": 9, "iter": 500, "lr": 0.002, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.05813, "loss_rpn_bbox": 0.06669, "loss_cls": 0.41838, "acc": 89.67383, "loss_bbox": 0.32505, "loss": 0.86826, "time": 0.38195}
{"mode": "train", "epoch": 9, "iter": 550, "lr": 0.002, "memory": 3788, "data_time": 0.00695, "loss_rpn_cls": 0.05257, "loss_rpn_bbox": 0.07742, "loss_cls": 0.44309, "acc": 89.43164, "loss_bbox": 0.34537, "loss": 0.91844, "time": 0.38324}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.002, "memory": 3788, "data_time": 0.15444, "loss_rpn_cls": 0.04526, "loss_rpn_bbox": 0.06795, "loss_cls": 0.40089, "acc": 90.13477, "loss_bbox": 0.3204, "loss": 0.8345, "time": 0.53174}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.002, "memory": 3788, "data_time": 0.00671, "loss_rpn_cls": 0.05717, "loss_rpn_bbox": 0.07629, "loss_cls": 0.44468, "acc": 89.01758, "loss_bbox": 0.36743, "loss": 0.94557, "time": 0.38166}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.002, "memory": 3788, "data_time": 0.00693, "loss_rpn_cls": 0.04088, "loss_rpn_bbox": 0.05812, "loss_cls": 0.40358, "acc": 90.42773, "loss_bbox": 0.30871, "loss": 0.81128, "time": 0.3857}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.002, "memory": 3788, "data_time": 0.00724, "loss_rpn_cls": 0.04584, "loss_rpn_bbox": 0.06533, "loss_cls": 0.41972, "acc": 89.50781, "loss_bbox": 0.34279, "loss": 0.87369, "time": 0.38899}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.002, "memory": 3788, "data_time": 0.00679, "loss_rpn_cls": 0.04841, "loss_rpn_bbox": 0.06217, "loss_cls": 0.39073, "acc": 90.11133, "loss_bbox": 0.308, "loss": 0.80931, "time": 0.38825}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.002, "memory": 3788, "data_time": 0.00695, "loss_rpn_cls": 0.04775, "loss_rpn_bbox": 0.07141, "loss_cls": 0.43348, "acc": 89.49023, "loss_bbox": 0.345, "loss": 0.89764, "time": 0.37814}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.002, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.04612, "loss_rpn_bbox": 0.07232, "loss_cls": 0.4083, "acc": 89.82422, "loss_bbox": 0.33689, "loss": 0.86363, "time": 0.38382}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.002, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.04109, "loss_rpn_bbox": 0.06153, "loss_cls": 0.40308, "acc": 90.13867, "loss_bbox": 0.32752, "loss": 0.83322, "time": 0.38117}
{"mode": "train", "epoch": 10, "iter": 450, "lr": 0.002, "memory": 3788, "data_time": 0.00681, "loss_rpn_cls": 0.03952, "loss_rpn_bbox": 0.06441, "loss_cls": 0.41604, "acc": 90.60156, "loss_bbox": 0.31175, "loss": 0.83172, "time": 0.38248}
{"mode": "train", "epoch": 10, "iter": 500, "lr": 0.002, "memory": 3788, "data_time": 0.00666, "loss_rpn_cls": 0.04652, "loss_rpn_bbox": 0.07185, "loss_cls": 0.3942, "acc": 90.42383, "loss_bbox": 0.29801, "loss": 0.81058, "time": 0.38289}
{"mode": "train", "epoch": 10, "iter": 550, "lr": 0.002, "memory": 3788, "data_time": 0.00734, "loss_rpn_cls": 0.04698, "loss_rpn_bbox": 0.06518, "loss_cls": 0.38018, "acc": 90.57812, "loss_bbox": 0.29259, "loss": 0.78493, "time": 0.38187}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.002, "memory": 3788, "data_time": 0.1543, "loss_rpn_cls": 0.04384, "loss_rpn_bbox": 0.0753, "loss_cls": 0.42743, "acc": 89.1875, "loss_bbox": 0.34258, "loss": 0.88914, "time": 0.52909}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.002, "memory": 3788, "data_time": 0.00724, "loss_rpn_cls": 0.03828, "loss_rpn_bbox": 0.0618, "loss_cls": 0.40199, "acc": 89.47656, "loss_bbox": 0.3429, "loss": 0.84497, "time": 0.38005}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.002, "memory": 3788, "data_time": 0.00763, "loss_rpn_cls": 0.03497, "loss_rpn_bbox": 0.05649, "loss_cls": 0.39608, "acc": 90.25781, "loss_bbox": 0.31321, "loss": 0.80075, "time": 0.38255}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.002, "memory": 3788, "data_time": 0.00703, "loss_rpn_cls": 0.046, "loss_rpn_bbox": 0.07311, "loss_cls": 0.41432, "acc": 89.89258, "loss_bbox": 0.33995, "loss": 0.87337, "time": 0.39116}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.002, "memory": 3788, "data_time": 0.00664, "loss_rpn_cls": 0.0358, "loss_rpn_bbox": 0.05624, "loss_cls": 0.33982, "acc": 91.30273, "loss_bbox": 0.28729, "loss": 0.71915, "time": 0.38144}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.002, "memory": 3788, "data_time": 0.00736, "loss_rpn_cls": 0.04287, "loss_rpn_bbox": 0.06184, "loss_cls": 0.36193, "acc": 90.71484, "loss_bbox": 0.30045, "loss": 0.76709, "time": 0.38892}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.002, "memory": 3788, "data_time": 0.00675, "loss_rpn_cls": 0.04348, "loss_rpn_bbox": 0.0735, "loss_cls": 0.39891, "acc": 89.49023, "loss_bbox": 0.33837, "loss": 0.85427, "time": 0.38333}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.002, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.04017, "loss_rpn_bbox": 0.06473, "loss_cls": 0.36157, "acc": 90.70898, "loss_bbox": 0.3004, "loss": 0.76688, "time": 0.38142}
{"mode": "train", "epoch": 11, "iter": 450, "lr": 0.002, "memory": 3788, "data_time": 0.0072, "loss_rpn_cls": 0.04345, "loss_rpn_bbox": 0.07151, "loss_cls": 0.42085, "acc": 89.31445, "loss_bbox": 0.34789, "loss": 0.88371, "time": 0.3905}
{"mode": "train", "epoch": 11, "iter": 500, "lr": 0.002, "memory": 3788, "data_time": 0.00666, "loss_rpn_cls": 0.04472, "loss_rpn_bbox": 0.06656, "loss_cls": 0.39402, "acc": 89.8457, "loss_bbox": 0.32083, "loss": 0.82612, "time": 0.37896}
{"mode": "train", "epoch": 11, "iter": 550, "lr": 0.002, "memory": 3788, "data_time": 0.00595, "loss_rpn_cls": 0.04061, "loss_rpn_bbox": 0.05805, "loss_cls": 0.3975, "acc": 89.81445, "loss_bbox": 0.33199, "loss": 0.82815, "time": 0.38103}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0002, "memory": 3788, "data_time": 0.15458, "loss_rpn_cls": 0.0371, "loss_rpn_bbox": 0.05936, "loss_cls": 0.35563, "acc": 90.67383, "loss_bbox": 0.30706, "loss": 0.75915, "time": 0.5352}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0002, "memory": 3788, "data_time": 0.00597, "loss_rpn_cls": 0.04162, "loss_rpn_bbox": 0.06268, "loss_cls": 0.38794, "acc": 89.74219, "loss_bbox": 0.32997, "loss": 0.82221, "time": 0.38868}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0002, "memory": 3788, "data_time": 0.00705, "loss_rpn_cls": 0.03416, "loss_rpn_bbox": 0.06034, "loss_cls": 0.35142, "acc": 90.7832, "loss_bbox": 0.31093, "loss": 0.75684, "time": 0.38136}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.0002, "memory": 3788, "data_time": 0.00701, "loss_rpn_cls": 0.03789, "loss_rpn_bbox": 0.06109, "loss_cls": 0.36405, "acc": 90.45898, "loss_bbox": 0.29964, "loss": 0.76267, "time": 0.38486}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 0.0002, "memory": 3788, "data_time": 0.00677, "loss_rpn_cls": 0.03585, "loss_rpn_bbox": 0.05816, "loss_cls": 0.36752, "acc": 90.48242, "loss_bbox": 0.30462, "loss": 0.76615, "time": 0.38796}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.0002, "memory": 3788, "data_time": 0.00693, "loss_rpn_cls": 0.04252, "loss_rpn_bbox": 0.06858, "loss_cls": 0.41584, "acc": 88.92383, "loss_bbox": 0.36065, "loss": 0.8876, "time": 0.38296}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 0.0002, "memory": 3788, "data_time": 0.0065, "loss_rpn_cls": 0.04012, "loss_rpn_bbox": 0.06837, "loss_cls": 0.34139, "acc": 90.89844, "loss_bbox": 0.29512, "loss": 0.74499, "time": 0.38306}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 0.0002, "memory": 3788, "data_time": 0.00689, "loss_rpn_cls": 0.03354, "loss_rpn_bbox": 0.06218, "loss_cls": 0.3696, "acc": 90.34961, "loss_bbox": 0.32103, "loss": 0.78635, "time": 0.3879}
{"mode": "train", "epoch": 12, "iter": 450, "lr": 0.0002, "memory": 3788, "data_time": 0.00691, "loss_rpn_cls": 0.03648, "loss_rpn_bbox": 0.05784, "loss_cls": 0.36404, "acc": 90.48438, "loss_bbox": 0.31708, "loss": 0.77544, "time": 0.37964}
{"mode": "train", "epoch": 12, "iter": 500, "lr": 0.0002, "memory": 3788, "data_time": 0.00703, "loss_rpn_cls": 0.03562, "loss_rpn_bbox": 0.05978, "loss_cls": 0.36422, "acc": 90.5332, "loss_bbox": 0.3058, "loss": 0.76542, "time": 0.44713}
{"mode": "train", "epoch": 12, "iter": 550, "lr": 0.0002, "memory": 3788, "data_time": 0.00859, "loss_rpn_cls": 0.03833, "loss_rpn_bbox": 0.06762, "loss_cls": 0.38781, "acc": 89.87695, "loss_bbox": 0.33353, "loss": 0.82729, "time": 0.51101}
{"mode": "val", "epoch": 12, "iter": 5000, "lr": 0.0002, "bbox_mAP": 0.041, "bbox_mAP_50": 0.094, "bbox_mAP_75": 0.029, "bbox_mAP_s": 0.025, "bbox_mAP_m": 0.049, "bbox_mAP_l": 0.046, "bbox_mAP_copypaste": "0.041 0.094 0.029 0.025 0.049 0.046"}
